/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;

geometry
{
    abscale.stl
    {
        type triSurfaceMesh;
        name ahmed;
    }

   refinementBox 
   { type searchableBox;
     min (-1.5 -0.3 0.0); max ( 0.5  0.3 0.7); 
   }

   refinementGround 
   { type searchableBox;
     min (-4.0 -1.0 0.0); max ( 3.0  1.0  0.1); 
   }

   refinementWake
   { type searchableBox;
     min (0.0 -0.8 0.0); max ( 3.0  0.8  0.5); 
   }
};

// Settings for the castellatedMesh generation.
castellatedMeshControls
{

    maxLocalCells 1000000;
    maxGlobalCells 2000000;
    minRefinementCells 10;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 3;

    features
    (
        {
            file "abscale.eMesh";
            level 1;
        }
    );

    refinementSurfaces
    {
        ahmed
        {
            // Surface-wise min and max refinement level
            level (6 6);
        }
    }

    resolveFeatureAngle 10;

    refinementRegions
    {
        refinementBox
        {
            mode distance;
            levels ((0.1 4));
        }
	refinementGround{
	  mode inside; 
          levels ((1E15 4));
	}
	refinementWake{
	  mode inside; 
          levels ((1E15 3));
	}

        refinementBox
        {
            mode inside;
            levels ((1E15 4));
        }
    }

    locationInMesh (3 0.67 0.43);

    allowFreeStandingZoneFaces true;//to remove in version 1.6-ext

}

snapControls
{
    nSmoothPatch 3;

    //tolerance 4.0;
    tolerance 2.0;

    //- Number of mesh displacement relaxation iterations.
    nSolveIter 300;

    //- Maximum number of snapping relaxation iterations. Should stop
    //  before upon reaching a correct mesh.
    nRelaxIter 5;

    //- Highly experimental and wip: number of feature edge snapping
    //  iterations. Leave out altogether to disable.
    //  Do not use here since mesh resolution too low and baffles present
    nFeatureSnapIter 10;

        implicitFeatureSnap false;
        explicitFeatureSnap true;
        multiRegionFeatureSnap false;
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;

    layers
    {
        "(ground|OpenSCAD|ahmed).*"
        {
            nSurfaceLayers 3;
        }
    }

    expansionRatio 1.2;
    finalLayerThickness 0.5;
    minThickness 0.01;

    nGrow 1;

    featureAngle 130;

    nRelaxIter 5;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;

    //minMedianAxisAngle 130;
        minMedialAxisAngle 90;
        minMedianAxisAngle 90;

    nBufferCellsNoExtrude 0;
    nLayerIter 50;
    nRelaxedIter 20;

}

// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    // Specify mesh quality constraints in separate dictionary so can
    // be reused (e.g. checkMesh -meshQuality)
    #include "meshQualityDict"

    // Optional : some meshing phases allow usage of relaxed rules.
    // See e.g. addLayersControls::nRelaxedIter.
    relaxed
    {
        // Maximum non-orthogonality allowed. Set to 180 to disable.
        maxNonOrtho 75;
    }

    //minFlatness 0.5;

    // Advanced

        // Number of error distribution iterations
        nSmoothScale 4;
        // amount to scale back displacement at error points
        errorReduction 0.75;
}

// Advanced

    //debug 0;
    //debug 3;

//// Debug flags
/*
debugFlags
(
    //mesh            // write intermediate meshes
    //intersections   // write current mesh intersections as .obj files
    //featureSeeds    // write information about explicit feature edge
                    // refinement
    //attraction      // write attraction as .obj files
    layerInfo       // write information about layers
);
*/

//
//// Write flags

writeFlags
(
    scalarLevels    // write volScalarField with cellLevel for postprocessing
    layerSets       // write cellSets, faceSets of faces in layer
    layerFields     // write volScalarField for layer coverage
);

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;

// ************************************************************************* //
